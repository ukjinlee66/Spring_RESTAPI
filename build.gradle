plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	asciidoctorExts
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	//modelmapper
	implementation group: 'org.modelmapper', name: 'modelmapper', version: '3.2.0'
	// https://mvnrepository.com/artifact/pl.pragmatists/JUnitParams
	testImplementation group: 'pl.pragmatists', name: 'JUnitParams', version: '1.1.1'
	testImplementation 'junit:junit:4.13.1'
	compileOnly 'org.projectlombok:lombok'
    testImplementation 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	// ascii 관련 추가
	asciidoctorExts 'org.springframework.restdocs:spring-restdocs-asciidoctor'

	// mapstruct
	implementation 'org.mapstruct:mapstruct:1.4.2.Final'
	annotationProcessor "org.mapstruct:mapstruct-processor:1.4.2.Final"
	annotationProcessor(
			'org.projectlombok:lombok',
			'org.projectlombok:lombok-mapstruct-binding:0.1.0'
	)
}

test {
	useJUnitPlatform()
	outputs.dir snippetsDir
}

asciidoctor {
	inputs.dir snippetsDir
	configurations 'asciidoctorExt'
	dependsOn test
}

bootJar {
	dependsOn asciidoctor

	// build 경로 안에 있는 index.html을 밖으로 꺼내준다.
	copy {
		from "${asciidoctor.outputDir}"
		into "src/main/resources/static/docs"   // src/main/resources/static/docs로 복사
	}
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}
